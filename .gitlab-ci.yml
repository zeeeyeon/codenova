stages:
  - build-and-push
  - deploy

variables:
  DOCKER_DRIVER: overlay2

before_script:
  - echo "$SSH_KEY" > CodeNova.pem
  - chmod 400 CodeNova.pem

build-and-push:
  stage: build-and-push
  tags:
    - deploy
  only:
    - be/test/cicd
  script:
    - echo "🔐 AWS CLI 로그인"
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_REGION

    - echo "🔑 ECR 로그인"
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BACKEND_REPO
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_FRONTEND_REPO

    - echo "📦 백엔드 Docker 빌드 & 푸시 (Gradle 빌드 포함)"
    - docker build -t $ECR_BACKEND_REPO:latest ./Backend
    - docker push $ECR_BACKEND_REPO:latest

    - echo "🎨 프론트엔드 Docker 빌드 & 푸시 (React 빌드 포함)"
    - docker build -t $ECR_FRONTEND_REPO:latest ./Front/codenova
    - docker push $ECR_FRONTEND_REPO:latest

deploy:
  stage: deploy
  tags:
    - deploy
  only:
    - be/test/cicd
  script:
    - echo "🚀 EC2에서 실행"
    - |
      ssh -o StrictHostKeyChecking=no -i CodeNova.pem ubuntu@3.25.70.20 << EOF
        echo "🔑 ECR 로그인 on EC2"
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BACKEND_REPO
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_FRONTEND_REPO

        echo "📥 이미지 pull"
        docker pull $ECR_BACKEND_REPO:latest
        docker pull $ECR_FRONTEND_REPO:latest

        echo "🧹 기존 컨테이너 정리"
        docker stop backend || true && docker rm backend || true
        docker stop frontend || true && docker rm frontend || true

        echo "🚀 컨테이너 실행"
        docker run -d --name backend -p 8080:8080 $ECR_BACKEND_REPO:latest
        docker run -d --name frontend -p 3000:80 $ECR_FRONTEND_REPO:latest
      EOF